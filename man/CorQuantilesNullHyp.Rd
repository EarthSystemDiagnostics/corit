% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CorQuantilesNullHyp.R
\name{CorQuantilesNullHyp}
\alias{CorQuantilesNullHyp}
\title{CorQuantilesNullHyp}
\usage{
CorQuantilesNullHyp(timser1, timser2, beta.noise1, beta.noise2, detr, rep,
  quant, method = c("InterpolationMethod", "DirectFiltering",
  "IntegrandInterpolationMethod"), appliedFilter = c("gauss", "runmean",
  "lowpass"), fc, tn = seq(from = 10, to = max(c(index(timser1),
  index(timser2))), by = 10), dt, int.method = c("linear", "nearest"),
  k = 5)
}
\arguments{
\item{timser1, timser2}{time series (zoo-objects) for which the Null Hypothesis of the correlation is to be applied}

\item{beta.noise1, beta.noise2}{fitted slopes from the power spectrum of timser1 and timser2}

\item{detr}{TRUE for removing a linear trend, else FALSE}

\item{rep}{number of repetitions during the Monte Carlo procedure}

\item{quant}{quantiles to be estimated}

\item{method}{method to handle irregularity of sampling (DirectFiltering, IntegrandInterpolationMethod, InterpolationMethod)}

\item{appliedFilter}{time domain filter (gauss, runmean, lowpass)}

\item{fc}{cut-off frequency of the applied filter}

\item{tn}{output vector (time) of the filtered data (only used in case of DirectFiltering and IntegrandInterpolationMethod)}

\item{dt}{regular inter-observation time step of the interpolation (only used in case of InterpolationMethod)}

\item{int.method}{kind of interpolation (linear, nearest neighbor) (only used in case of InterpolationMethod)}

\item{k}{scaling factor to define the sharpness of the lowpass}
}
\value{
$corPair: estimated correlations during the Monte Carlo procedure, $Quantile: quantiles to be estimated
}
\description{
Monte Carlo based procedure to estimate the quantiles of the correlation of independent noise which belong to the methods and applied filter to 
estimate the time scale dependent correlation of irregularly sampled time series
}
\examples{
timeseries1 <- zoo(rnorm(100), order.by=sort(runif(100,min=1,max=1000)))
timeseries2 <- zoo(rnorm(100), order.by=sort(runif(100,min=1,max=1000)))
slopes <- estimateTimserSlopes(timeseries1,timeseries2,1)
CorQuantilesNullHyp(timeseries1, timeseries2, slopes$s1, slopes$s2, FALSE, 1000, c(0.05,0.95), "InterpolationMethod", "gauss", 1/200, NA, 10, "linear", NA)
}
